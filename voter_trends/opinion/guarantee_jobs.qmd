---
title: Guarantee Jobs
---

```{r setup}
library(tidyverse)
library(ggpubr)
library(plotly)
library(gt)
options(digits=3)

anes_df <- read_csv(here::here("data", "anes_timeseries_cdf_csv_20220916.csv"))

pal <- colorRampPalette(c("orangered3", "gray","darkblue"))

source(here::here("data", "scripts.r"))



```


## Question Language

**ALL YEARS EXCEPT 2000 TELEPHONE:**
Some people feel that the government in Washington should see to it that every person has a job and a good standard of living. (1972-1978,1996-LATER: Suppose these people are at one end of a scale, at point 1). Others think the government should just let each person get ahead on his/their own. (1972-1978,1996: Suppose these people are at the other end, at point 7. And, of course, some other people have opinions somewhere in between, at pints 2,3,4,5 or 6.) Where would you place yourself on this scale, or haven’t you thought much about this? (7-POINT SCALE SHOWN TO R)

1. Government see to job and good standard of living
2. 
3. 
4. 
5. 
6. 
7. Government let each person get ahead on his own
9. DK; haven’t thought much about it

## All

::: {.panel-tabset group="all"}

### Average
```{r}


levels <- c(1:7, 9)
variable <- "VCF0809"
var_levels <- c("1 - See to job", "2", "3", "4", "5", "6", 
                "7 - Let each person", "Don't Know")
var_name <- "Guarantee Job"



all_df <- subgroup_analysis(data=anes_df, 
                variable=variable,
                var_name=var_name,
                var_levels=var_levels, 
                levels=levels, calc_mean=TRUE)

all_df <- all_df |> 
        mutate(`95% Lower`=Average - 1.96 * `Standard Error`, 
                 `95% Upper`=Average + 1.96 * `Standard Error`)
plot_data <- all_df |> 
            filter(total > 50) 

p <- ggplot(plot_data, 
        aes(x=Year, y=Average, 
            ymin=`95% Lower`,
            ymax=`95% Upper`)) + 
        geom_linerange(position=position_dodge(width=1),
            color=alpha("gray", 0.5)) + 
        geom_point(position=position_dodge(width=1)) + 
        geom_line(position=position_dodge(width=1)) +
        scale_color_viridis_d(option="H", begin=0.1, end=0.9) + 
        labs(y="Average", x="") + 
        theme_pubr() + theme(axis.text.x = element_text(angle=90, vjust=.5), legend.position="bottom")
        
```

::::{.toggle-div .visible}
```{r jobs-all}
p
```

::::


::::{.toggle-div }

```{r}

p <- ggplotly(p)  |> 
    layout(legend = list(
        orientation = "h",
        y=-0.2
        )
    ) 
p


all_df <- plot_data |> ungroup() |> 
    mutate("Sub Group"="All") |> 
    rename("Total"=total) 


```

::::
### Distribution 

```{r}




all_df <- subgroup_analysis(data=anes_df, 
                variable=variable,
                var_name=var_name,
                var_levels=var_levels, 
                levels=levels)
    
p <- ggplot(all_df, aes(x=Year, y=Percentage, 
        fill=!!sym(var_name))) + 
        geom_col(color="black") + 
        geom_hline(yintercept=50, linetype="dashed", color="grey70") + 
        geom_hline(yintercept=c(25,75), linetype="dotted",  color="grey70") + 
        scale_fill_viridis_d(option="H") + 
        # scale_y_continuous(labels=scales::label_percent()) +
        labs(y="Percentage", x="") + 
        theme_pubr() + 
        theme(legend.position="bottom")
        
```

::::{.toggle-div .visible}
```{r jobs-dist}
p
```

::::


::::{.toggle-div }

```{r}

p <- ggplotly(p)  |> 
    layout(legend = list(
        orientation = "h",
        y=-0.2
        )
    ) 
p


```
::::
:::

## By Education

```{r}
group_var_name <- "Education"
group_var <- "VCF0110"
group_var_levels <- 1:4
group_var_labels <- c("Less than High School", "High School Degree", 
        "Some College", "College Degree")
sub_df <- subgroup_analysis(data=anes_df, 
                variable=variable,
                var_name=var_name,
                var_levels=var_levels, 
                levels=levels, group_var=group_var, 
                group_var_name=group_var_name,
                group_var_levels=group_var_levels, 
                group_var_labels=group_var_labels, calc_mean=TRUE)

sub_df <- sub_df |> 
        mutate(`95% Lower`=Average - 1.96 * `Standard Error`, 
                 `95% Upper`=Average + 1.96 * `Standard Error`)
plot_data <- sub_df |> drop_na(!!sym(group_var_name)) |> 
            filter(total > 50) 

p <- ggplot(plot_data, 
        aes(x=Year, y=Average, 
            ymin=`95% Lower`,
            ymax=`95% Upper`,
            color=!!sym(group_var_name))) + 
        geom_linerange(position=position_dodge(width=1),
            color=alpha("gray", 0.5),
            aes(group=!!sym(group_var_name))) + 
        geom_point(position=position_dodge(width=1)) + 
        geom_line(position=position_dodge(width=1)) +
        scale_color_viridis_d(option="H", begin=0.1, end=0.9) + 
        labs(y="Average", x="") + 
        theme_pubr() + theme(axis.text.x = element_text(angle=90, vjust=.5),  legend.position="bottom")
        
```

:::{.toggle-div .visible}
```{r jobs-education}
p + guides(color=guide_legend(nrow=2))
```

:::


:::{.toggle-div }

```{r}

p <- ggplotly(p)  |> 
    layout(legend = list(
        orientation = "h",
        y=-0.2
        )
    ) 
p


all_df <- plot_data |> ungroup() |> 
    select(-group) |> 
    rename("Total"=total, 
            "Sub Group"=!!sym(group_var_name)) 

```

:::

## By Gender

```{r}



group_var_name <- "Gender"
group_var="VCF0104"
group_var_levels=1:2
group_var_labels=c("Male", "Female")

sub_df <- subgroup_analysis(data=anes_df, 
                variable=variable,
                var_name=var_name,
                var_levels=var_levels, 
                levels=levels, group_var=group_var, 
                group_var_name=group_var_name,
                group_var_levels=group_var_levels, 
                group_var_labels=group_var_labels, calc_mean=TRUE)

sub_df <- sub_df |> 
        mutate(`95% Lower`=Average - 1.96 * `Standard Error`, 
                 `95% Upper`=Average + 1.96 * `Standard Error`)
plot_data <- sub_df |> drop_na(!!sym(group_var_name)) |> 
            filter(total > 50) 

p <- ggplot(plot_data, 
        aes(x=Year, y=Average, 
            ymin=`95% Lower`,
            ymax=`95% Upper`,
            color=!!sym(group_var_name))) + 
        geom_linerange(position=position_dodge(width=1),
            color=alpha("gray", 0.5),
            aes(group=!!sym(group_var_name))) + 
        geom_point(position=position_dodge(width=1)) + 
        geom_line(position=position_dodge(width=1)) +
        scale_color_viridis_d(option="H", begin=0.1, end=0.9) + 
        labs(y="Average", x="") + 
        theme_pubr() + theme(axis.text.x = element_text(angle=90, vjust=.5), legend.position="bottom")
        
```

:::{.toggle-div .visible}
```{r jobs-gender}
p
```

:::


:::{.toggle-div }

```{r}

p <- ggplotly(p)  |> 
    layout(legend = list(
        orientation = "h",
        y=-0.2
        )
    ) 
p


all_df <- plot_data |> ungroup() |> 
    select(-group) |> 
    rename("Total"=total, 
            "Sub Group"=!!sym(group_var_name)) |> 
    rbind(all_df)

```

:::

## By Income

```{r}
group_var_name <- "Income"
group_var <- "VCF0114"
group_var_levels <- 1:5
group_var_labels <- c("0-16 Percentile", "17-33 Percentile",
                "34-67 Percentile", "68-95 Percentile",
                "96-100 Percentile")
sub_df <- subgroup_analysis(data=anes_df, 
                variable=variable,
                var_name=var_name,
                var_levels=var_levels, 
                levels=levels, group_var=group_var, 
                group_var_name=group_var_name,
                group_var_levels=group_var_levels, 
                group_var_labels=group_var_labels, calc_mean=TRUE)

sub_df <- sub_df |> 
        mutate(`95% Lower`=Average - 1.96 * `Standard Error`, 
                 `95% Upper`=Average + 1.96 * `Standard Error`)
plot_data <- sub_df |> drop_na(!!sym(group_var_name)) |> 
            filter(total > 50) 

p <- ggplot(plot_data, 
        aes(x=Year, y=Average, 
            ymin=`95% Lower`,
            ymax=`95% Upper`,
            color=!!sym(group_var_name))) + 
        geom_linerange(position=position_dodge(width=1),
            color=alpha("gray", 0.5),
            aes(group=!!sym(group_var_name))) + 
        geom_point(position=position_dodge(width=1)) + 
        geom_line(position=position_dodge(width=1)) +
        scale_color_viridis_d(option="H", begin=0.1, end=0.9) + 
        labs(y="Average", x="") + 
        theme_pubr() + theme(axis.text.x = element_text(angle=90, vjust=.5), legend.position="bottom")
        
```

:::{.toggle-div .visible}
```{r jobs-income}
p + guides(color=guide_legend(nrow=2))
```

:::


:::{.toggle-div }

```{r}

p <- ggplotly(p)  |> 
    layout(legend = list(
        orientation = "h",
        y=-0.2
        )
    ) 
p

all_df <- plot_data |> ungroup() |> 
    select(-group) |> 
    rename("Total"=total, 
            "Sub Group"=!!sym(group_var_name)) |> 
    rbind(all_df)

```

:::


## By Party

```{r}
group_var_name <- "Partisanship"
group_var <- "VCF0303"
group_var_levels <- 1:3
group_var_labels <- c("Democrats", "Independents", "Republicans")

tmp_df <- anes_df |> 
    mutate(VCF0148a = 
        case_match(VCF0148a, 
            1:3 ~ 1, 
            4:6 ~ 2, 
            .default=NA))
            
sub_df <- subgroup_analysis(data=tmp_df, 
                variable=variable,
                var_name=var_name,
                var_levels=var_levels, 
                levels=levels, group_var=group_var, 
                group_var_name=group_var_name,
                group_var_levels=group_var_levels, 
                group_var_labels=group_var_labels, calc_mean=TRUE)

sub_df <- sub_df |> 
        mutate(`95% Lower`=Average - 1.96 * `Standard Error`, 
                 `95% Upper`=Average + 1.96 * `Standard Error`)
plot_data <- sub_df |> drop_na(!!sym(group_var_name)) |> 
            filter(total > 50) 

p <- ggplot(plot_data, 
        aes(x=Year, y=Average, 
            ymin=`95% Lower`,
            ymax=`95% Upper`,
            color=!!sym(group_var_name))) + 
        geom_linerange(position=position_dodge(width=1),
            color=alpha("gray", 0.5),
            aes(group=!!sym(group_var_name))) + 
        geom_point(position=position_dodge(width=1)) + 
        geom_line(position=position_dodge(width=1)) +
        scale_color_viridis_d(option="H", begin=0.1, end=0.9) + 
        labs(y="Average", x="") + 
        theme_pubr() + theme(axis.text.x = element_text(angle=90, vjust=.5), legend.position="bottom")
        
```

:::{.toggle-div .visible}
```{r jobs-party}
p
```

:::


:::{.toggle-div }

```{r}

p <- ggplotly(p)  |> 
    layout(legend = list(
        orientation = "h",
        y=-0.2
        )
    ) 
p


all_df <- plot_data |> ungroup() |> 
    select(-group) |> 
    rename("Total"=total, 
            "Sub Group"=!!sym(group_var_name)) |> 
    rbind(all_df)
```

:::

Note: This includes "leaners" in the party they lean towards. Individuals were first asked whether they think of themselves as a Republican, Democrat or Independent. Those who identify as Independent are then asked if they lean towards one party or the other.


## By Race

```{r}
group_var_name <- "Race"
group_var <- "VCF0105b"
group_var_levels <- 1:4
group_var_labels <- c("White, non-Hispanic", "Black, non-Hispanic", 
        "Hispanic", "Other, non-Hispanic")
sub_df <- subgroup_analysis(data=anes_df, 
                variable=variable,
                var_name=var_name,
                var_levels=var_levels, 
                levels=levels, group_var=group_var, 
                group_var_name=group_var_name,
                group_var_levels=group_var_levels, 
                group_var_labels=group_var_labels, calc_mean=TRUE)

sub_df <- sub_df |> 
        mutate(`95% Lower`=Average - 1.96 * `Standard Error`, 
                 `95% Upper`=Average + 1.96 * `Standard Error`)
plot_data <- sub_df |> drop_na(!!sym(group_var_name)) |> 
            filter(total > 50) 

p <- ggplot(plot_data, 
        aes(x=Year, y=Average, 
            ymin=`95% Lower`,
            ymax=`95% Upper`,
            color=!!sym(group_var_name))) + 
        geom_linerange(position=position_dodge(width=1),
            color=alpha("gray", 0.5),
            aes(group=!!sym(group_var_name))) + 
        geom_point(position=position_dodge(width=1)) + 
        geom_line(position=position_dodge(width=1)) +
        scale_color_viridis_d(option="H", begin=0.1, end=0.9) + 
        labs(y="Average", x="") + 
        theme_pubr() + theme(axis.text.x = element_text(angle=90, vjust=.5), legend.position="bottom")
        
```

:::{.toggle-div .visible}
```{r jobs-race}
p
```

:::


:::{.toggle-div }

```{r}

p <- ggplotly(p)  |> 
    layout(legend = list(
        orientation = "h",
        y=-0.2
        )
    ) 
p

all_df <- plot_data |> ungroup() |> 
    select(-group) |> 
    rename("Total"=total, 
            "Sub Group"=!!sym(group_var_name)) |> 
    rbind(all_df)

```

:::

Note: Options for race have varied significantly overtime, and the size of the ANES means that there are very small samples Asian and American Indian. Because of this they are grouped together into "Other, non-Hispanic" which also includes those who identify as multiple racial categories. I also drop any years where there are fewer than 50 individuals in the sample. This is far from ideal.


## By Subjective Class

```{r}
group_var_name <- "Class"
group_var <- "VCF0148a"
group_var_levels <- 1:2
group_var_labels <- c("Working Class", "Middle Class")

tmp_df <- anes_df |> 
    mutate(VCF0148a = 
        case_match(VCF0148a, 
            1:3 ~ 1, 
            4:6 ~ 2, 
            .default=NA))

sub_df <- subgroup_analysis(data=tmp_df, 
                variable=variable,
                var_name=var_name,
                var_levels=var_levels, 
                levels=levels, group_var=group_var, 
                group_var_name=group_var_name,
                group_var_levels=group_var_levels, 
                group_var_labels=group_var_labels, calc_mean=TRUE)

sub_df <- sub_df |> 
        mutate(`95% Lower`=Average - 1.96 * `Standard Error`, 
                 `95% Upper`=Average + 1.96 * `Standard Error`)
plot_data <- sub_df |> drop_na(!!sym(group_var_name)) |> 
            filter(total > 50) 

p <- ggplot(plot_data, 
        aes(x=Year, y=Average, 
            ymin=`95% Lower`,
            ymax=`95% Upper`,
            color=!!sym(group_var_name))) + 
        geom_linerange(position=position_dodge(width=1),
            color=alpha("gray", 0.5),
            aes(group=!!sym(group_var_name))) + 
        geom_point(position=position_dodge(width=1)) + 
        geom_line(position=position_dodge(width=1)) +
        scale_color_viridis_d(option="H", begin=0.1, end=0.9) + 
        labs(y="Average", x="") + 
        theme_pubr() + theme(axis.text.x = element_text(angle=90, vjust=.5), legend.position="bottom")
        
```

:::{.toggle-div .visible}
```{r jobs-class}
p
```

:::


:::{.toggle-div }

```{r}

p <- ggplotly(p)  |> 
    layout(legend = list(
        orientation = "h",
        y=-0.2
        )
    ) 
p

all_df <- plot_data |> ungroup() |> 
    select(-group) |> 
    rename("Total"=total, 
            "Sub Group"=!!sym(group_var_name)) |> 
    rbind(all_df)

```

:::

Subjective class is what an individual _identifies_ as when asked. The question used by ANES is:

>There’s been some talk these days about different social classes.
Most people say they belong either to the middle class or the working
class. Do you ever think of yourself as belonging in one of these classes?
Which one?  

In some years respondents were asked where they identified within "working" or "middle" but not consistently so that has been dropped from this analysis. 



## By Union Status

```{r}
group_var_name <- "Union"
group_var <- "VCF0127"
group_var_levels <- 1:2
group_var_labels <-c("Union Household", "Non-Union")
sub_df <- subgroup_analysis(data=anes_df, 
                variable=variable,
                var_name=var_name,
                var_levels=var_levels, 
                levels=levels, group_var=group_var, 
                group_var_name=group_var_name,
                group_var_levels=group_var_levels, 
                group_var_labels=group_var_labels, calc_mean=TRUE)

sub_df <- sub_df |> 
        mutate(`95% Lower`=Average - 1.96 * `Standard Error`, 
                 `95% Upper`=Average + 1.96 * `Standard Error`)
plot_data <- sub_df |> drop_na(!!sym(group_var_name)) |> 
            filter(total > 50) 

p <- ggplot(plot_data, 
        aes(x=Year, y=Average, 
            ymin=`95% Lower`,
            ymax=`95% Upper`,
            color=!!sym(group_var_name))) + 
        geom_linerange(position=position_dodge(width=1),
            color=alpha("gray", 0.5),
            aes(group=!!sym(group_var_name))) + 
        geom_point(position=position_dodge(width=1)) + 
        geom_line(position=position_dodge(width=1)) +
        scale_color_viridis_d(option="H", begin=0.1, end=0.9) + 
        labs(y="Average", x="") + 
        theme_pubr() + theme(axis.text.x = element_text(angle=90, vjust=.5), legend.position="bottom")
        
```

:::{.toggle-div .visible}
```{r jobs-union}
p
```

:::


:::{.toggle-div }

```{r}

p <- ggplotly(p)  |> 
    layout(legend = list(
        orientation = "h",
        y=-0.2
        )
    ) 
p


all_df <- plot_data |> ungroup() |> 
    select(-group) |> 
    rename("Total"=total, 
            "Sub Group"=!!sym(group_var_name)) |> 
    rbind(all_df)

```


:::

## Data 

```{r}

write_csv(file=here::here("voter_trends", "data", paste0("opinion_",var_name, ".csv")), all_df)

```

The summary statistics are available [here](data/opinion_Guarantee Job.csv). The `Group N` column is the number of respondents in a given group in a given year while the `N` column is the number of respondents who selected the answer in the `Guarantee Jobs` column.

Note: These are all _weighted_ statistics (using the `VCF0009z` weights) and are provided if you'd like to make you own visualizations. If you are interested in doing your own analysis, use the raw data available from the [American National Election Studies survey](https://electionstudies.org/). 

