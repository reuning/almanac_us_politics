---
title: Partisan Identification
---


Generally speaking, do you usually think of yourself as a Republican, a Democrat, an Independent, or what? (IF REPUBLICAN OR DEMOCRAT) Would you call yourself a strong (REP/DEM) or a not very strong (REP/DEM)? (IF INDEPENDENT, OTHER [1966 AND LATER:] OR NO PREFERENCE; 2008: OR DK) Do you think of yourself as closer to the Republican or Democratic party?

## Overall Trend

```{r}
library(tidyverse)
library(ggpubr)
library(plotly)
library(gt)
options(digits=3)

anes_df <- read_csv(here::here("data", "anes_timeseries_cdf_csv_20220916.csv"))

pal <- colorRampPalette(c("orangered3", "gray","darkblue"))
pal <- rev(c(pal(7)[1:3],"springgreen4", pal(7)[4:7]))


p <- anes_df |> 
    filter(VCF0301 %in% c(1:7, 0)) |> 
    #filter(VCF0127b %in% c(1, 3) & VCF0301 > 0) |>
    group_by(VCF0004, VCF0301) |>  
    summarize(n=sum(VCF0009z)) |> 
    group_by(VCF0004) |>
    mutate(total=sum(n), 
        Percentage=n/total*100, 
        Party=factor(VCF0301, c(1:3,4,0,5:7), 
        labels=c("Strong Dem", "Weak Dem", "Lean Dem", "Indep", "Don't Know", "Lean Rep", "Weak Rep", "Strong Rep"))) |> 
    rename("Year"="VCF0004") |>
    ggplot(aes(x=Year, y=Percentage, 
    fill=Party)) + 
    geom_col() + 
    geom_hline(yintercept=50, linetype="dashed", color="grey70") + 
    geom_hline(yintercept=c(25, 75), linetype="dotted", color="grey70") + 
    scale_fill_manual("Party ID", values=pal) + 
    labs(y="Percentage", x="") + 
    theme_pubr() +
    theme(legend.position="bottom")
        
```

:::{.toggle-div .visible}
```{r party-all}
p
```

:::


:::{.toggle-div }

```{r}

p <- ggplotly(p)  |> 
    layout(legend = list(
        orientation = "h"
        )
    ) 
p
```

:::

## By Education


```{r}

levels <- 1:4
variable <- "VCF0110"
var_levels <- c("Less than High School", "High School Degree", 
        "Some College", "College Degree")
var_name <- "Education"
p <- list()

p_data <- anes_df |> 
    filter(VCF0301 %in% c(1:7, 0)) |> 
    rename(var=!!variable) |>
    group_by(VCF0004, VCF0301,var) |>  
    summarize(n=sum(VCF0009z)) |> 
    group_by(VCF0004, var) |>
    mutate(total=sum(n), 
        Percentage=(n/total)*100, 
        Party=factor(VCF0301, c(1:3,4,0,5:7), 
        labels=c("Strong Dem", "Weak Dem", "Lean Dem", "Indep", "Don't Know", "Lean Rep", "Weak Rep", "Strong Rep"))) |>
        rename("Year"="VCF0004")

for(ii in seq_along(levels)){
    p[[ii]] <- p_data |> 
        filter(total > 50) |>
        filter(var==ii) |>
        ggplot(aes(x=Year, y=Percentage, 
        fill=Party)) + 
        geom_col() + 
        geom_hline(yintercept=50, linetype="dashed", color="grey70") + 
        geom_hline(yintercept=c(25,75), linetype="dotted",  color="grey70") + 
        scale_fill_manual("Party ID", values=pal) + 
        # scale_y_continuous(labels=scales::label_percent()) +
        labs(y="Percentage", x="") + 
        theme_pubr() + theme(legend.position="bottom")

}

```

::: {.panel-tabset group="education"}

### Less Than High School 

::::{.toggle-div .visible}
```{r party-ed-less-than}
p[[1]]
```

::::


::::{.toggle-div }

```{r}

ggplotly(p[[1]]) |> 
    layout(legend = list(
        orientation = "h"
        )
    )

```

::::

### High School Degree

::::{.toggle-div .visible}
```{r party-ed-high-school}
p[[2]]
```

::::


::::{.toggle-div }

```{r}

ggplotly(p[[2]]) |> 
    layout(legend = list(
        orientation = "h"
        )
    )

```

::::

### Some College


::::{.toggle-div .visible}
```{r party-ed-some-college}
p[[3]]
```

::::


::::{.toggle-div }

```{r}

ggplotly(p[[3]]) |> 
    layout(legend = list(
        orientation = "h"
        )
    )

```

::::

### College Degree

::::{.toggle-div .visible}
```{r party-ed-college}
p[[4]]
```

::::


::::{.toggle-div }

```{r}

ggplotly(p[[4]]) |> 
    layout(legend = list(
        orientation = "h"
        )
    )

```

::::

### Distribution

```{r}

p <- p_data |> filter(VCF0301==1) |> 
    group_by(Year) |> 
    mutate(Percentage= total/sum(total)*100, 
        !!var_name:=factor(var, labels=var_levels, levels=levels)) |> 
    ggplot(aes(x=Year, y=Percentage, 
        fill=!!sym(var_name))) + 
        geom_col(color="gray", linewidth=.5) + 
        geom_hline(yintercept=50, linetype="dashed", color="grey70") + 
        geom_hline(yintercept=c(25,75), linetype="dotted",  color="grey70") + 
        scale_fill_viridis_d(option="H", begin=.05, end=.95) + 
        # scale_y_continuous(labels=scales::label_percent()) +
        labs(y="Percentage", x="") + 
        theme_pubr() + 
        theme(legend.position="bottom")
```


::::{.toggle-div .visible}
```{r party-ed-dist}
p + guides(fill=guide_legend(nrow=2))
```

::::


::::{.toggle-div }

```{r}

ggplotly(p) |> 
    layout(legend = list(
        orientation = "h"
        )
    )

```

::::

### Data

```{r}

data_out <- p_data |> ungroup() |>
    select(Year, var, Party, Percentage, total, n) |> 
    mutate(var=factor(var, levels, 
        labels=var_levels)) |> 
    rename("Group N"=total, "N"=n) |> 
    drop_na(var) |> 
    arrange(Year, var, Party) |> 
    rename(!!var_name:=var) 

data_out |> 
    gt() |> 
    fmt_integer(columns=c("N", "Group N")) |> 
    fmt_number(columns=Percentage) |>
    opt_interactive(use_filters=TRUE, use_compact_mode=TRUE)

write_csv(file=here::here("voter_trends", "data", paste0("party_",var_name, ".csv")), data_out)

```

The summary statistics are available [here](data/party_Education.csv). The `Group N` column is the number of respondents in a given group in a given year while the `N` column is the number of respondents who selected the answer in the `Party` column.

Note: These are all _weighted_ statistics (using the `VCF0009z` weights) and are provided if you'd like to make you own visualizations. If you are interested in doing your own analysis, use the raw data available from the [American National Election Studies survey](https://electionstudies.org/). 


:::


## By Gender


```{r}

levels <- 1:2
variable <- "VCF0104"
var_levels <- c("Male", "Female")
var_name <- "Gender"
p <- list()

p_data <- anes_df |> 
    filter(VCF0301 %in% c(1:7, 0)) |> 
    rename(var=!!variable) |>
    group_by(VCF0004, VCF0301,var) |>  
    summarize(n=sum(VCF0009z)) |> 
    group_by(VCF0004, var) |>
    mutate(total=sum(n), 
        Percentage=(n/total)*100, 
        Party=factor(VCF0301, c(1:3,4,0,5:7), 
        labels=c("Strong Dem", "Weak Dem", "Lean Dem", "Indep", "Don't Know", "Lean Rep", "Weak Rep", "Strong Rep"))) |>
        rename("Year"="VCF0004")

for(ii in seq_along(levels)){
    p[[ii]] <- p_data |> 
        filter(total > 50) |>
        filter(var==ii) |>
        ggplot(aes(x=Year, y=Percentage, 
        fill=Party)) + 
        geom_col() + 
        geom_hline(yintercept=50, linetype="dashed", color="grey70") + 
        geom_hline(yintercept=c(25,75), linetype="dotted",  color="grey70") + 
        scale_fill_manual("Party ID", values=pal) + 
        # scale_y_continuous(labels=scales::label_percent()) +
        labs(y="Percentage", x="") + 
        theme_pubr() + theme(legend.position="bottom")

}

```

::: {.panel-tabset group="gender"}

### Male 
::::{.toggle-div .visible}
```{r party-gender-male}
p[[1]]
```

::::


::::{.toggle-div }

```{r}

ggplotly(p[[1]]) |> 
    layout(legend = list(
        orientation = "h"
        )
    )

```

::::

### Female
::::{.toggle-div .visible}
```{r party-gender-female}
p[[2]]
```

::::


::::{.toggle-div }

```{r}

ggplotly(p[[2]]) |> 
    layout(legend = list(
        orientation = "h"
        )
    )

```

::::

### Distribution

```{r}

p <- p_data |> filter(VCF0301==1) |> 
    group_by(Year) |> 
    mutate(Percentage= total/sum(total)*100, 
        !!var_name:=factor(var, labels=var_levels, levels=levels)) |> 
    ggplot(aes(x=Year, y=Percentage, 
        fill=!!sym(var_name))) + 
        geom_col(color="gray", linewidth=.5) + 
        geom_hline(yintercept=50, linetype="dashed", color="grey70") + 
        geom_hline(yintercept=c(25,75), linetype="dotted",  color="grey70") + 
        scale_fill_viridis_d(option="H", begin=.05, end=.95) + 
        # scale_y_continuous(labels=scales::label_percent()) +
        labs(y="Percentage", x="") + 
        theme_pubr() + theme(legend.position="bottom")
```


::::{.toggle-div .visible}
```{r party-gender-dist}
p + guides(fill=guide_legend(nrow=2))
```

::::


::::{.toggle-div }

```{r}

ggplotly(p) |> 
    layout(legend = list(
        orientation = "h"
        )
    )

```

::::


### Data

```{r}


data_out <- p_data |> ungroup() |>
    select(Year, var, Party, Percentage, total, n) |> 
    mutate(var=factor(var, levels, 
        labels=var_levels)) |> 
    rename("Group N"=total, "N"=n) |> 
    drop_na(var) |> 
    arrange(Year, var, Party) |> 
    rename(!!var_name:=var) 

data_out |> 
    gt() |> 
    fmt_integer(columns=c("N", "Group N")) |> 
    fmt_number(columns=Percentage) |>
    opt_interactive(use_filters=TRUE, use_compact_mode=TRUE)

write_csv(file=here::here("voter_trends", "data", paste0("party_",var_name, ".csv")), data_out)

```

The summary statistics are available [here](data/party_Gender.csv). The `Group N` column is the number of respondents in a given group in a given year while the `N` column is the number of respondents who selected the answer in the `Party` column.

Note: These are all _weighted_ statistics (using the `VCF0009z` weights) and are provided if you'd like to make you own visualizations. If you are interested in doing your own analysis, use the raw data available from the [American National Election Studies survey](https://electionstudies.org/). 

:::



## By Income


```{r}

levels <- 1:5
variable <- "VCF0114"
var_levels <- c("0-16 Percentile", "17-33 Percentile",
                "34-67 Percentile", "68-95 Percentile",
                "96-100 Percentile")
var_name <- "Income"
p <- list()

p_data <- anes_df |> 
    filter(VCF0301 %in% c(1:7, 0)) |> 
    rename(var=!!variable) |>
    group_by(VCF0004, VCF0301,var) |>  
    summarize(n=sum(VCF0009z)) |> 
    group_by(VCF0004, var) |>
    mutate(total=sum(n), 
        Percentage=(n/total)*100, 
        Party=factor(VCF0301, c(1:3,4,0,5:7), 
        labels=c("Strong Dem", "Weak Dem", "Lean Dem", "Indep", "Don't Know", "Lean Rep", "Weak Rep", "Strong Rep"))) |>
        rename("Year"="VCF0004")

for(ii in seq_along(levels)){
    p[[ii]] <- p_data |> 
        filter(total > 50) |>
        filter(var==ii) |>
        ggplot(aes(x=Year, y=Percentage, 
        fill=Party)) + 
        geom_col() + 
        geom_hline(yintercept=50, linetype="dashed", color="grey70") + 
        geom_hline(yintercept=c(25,75), linetype="dotted",  color="grey70") + 
        scale_fill_manual("Party ID", values=pal) + 
        # scale_y_continuous(labels=scales::label_percent()) +
        labs(y="Percentage", x="") + 
        theme_pubr() + theme(legend.position="bottom")

}

```

::: {.panel-tabset group="income"}

### 0-16 Percentile

::::{.toggle-div .visible}
```{r party-income-1}
p[[1]]
```

::::


::::{.toggle-div }

```{r}

ggplotly(p[[1]]) |> 
    layout(legend = list(
        orientation = "h"
        )
    )

```

::::

### 17-33 Percentile

::::{.toggle-div .visible}
```{r party-income-2}
p[[2]]
```

::::


::::{.toggle-div }

```{r}

ggplotly(p[[2]]) |> 
    layout(legend = list(
        orientation = "h"
        )
    )

```

::::

### 14-67 Percentile
::::{.toggle-div .visible}
```{r party-income-3}
p[[3]]
```

::::


::::{.toggle-div }

```{r}

ggplotly(p[[3]]) |> 
    layout(legend = list(
        orientation = "h"
        )
    )

```

::::
### 67-95 Percentile
::::{.toggle-div .visible}
```{r party-income-4}
p[[4]]
```

::::


::::{.toggle-div }

```{r}

ggplotly(p[[4]]) |> 
    layout(legend = list(
        orientation = "h"
        )
    )

```

::::


### 96-100 Percentile

::::{.toggle-div .visible}
```{r party-income-5}
p[[5]]
```

::::


::::{.toggle-div }

```{r}

ggplotly(p[[5]]) |> 
    layout(legend = list(
        orientation = "h"
        )
    )

```

::::


### Distribution

```{r}

p <- p_data |> filter(VCF0301==1) |> 
    group_by(Year) |> 
    mutate(Percentage= total/sum(total)*100, 
        !!var_name:=factor(var, labels=var_levels, levels=levels)) |> 
    ggplot(aes(x=Year, y=Percentage, 
        fill=!!sym(var_name))) + 
        geom_col(color="gray", linewidth=.5) + 
        geom_hline(yintercept=50, linetype="dashed", color="grey70") + 
        geom_hline(yintercept=c(25,75), linetype="dotted",  color="grey70") + 
        scale_fill_viridis_d(option="H", begin=.05, end=.95) + 
        # scale_y_continuous(labels=scales::label_percent()) +
        labs(y="Percentage", x="") + 
        theme_pubr() + theme(legend.position="bottom")
```


::::{.toggle-div .visible}
```{r party-income-dist}
p + guides(fill=guide_legend(nrow=2))
```

::::


::::{.toggle-div }

```{r}

ggplotly(p) |> 
    layout(legend = list(
        orientation = "h"
        )
    )

```

::::


### Data

```{r}


data_out <- p_data |> ungroup() |>
    select(Year, var, Party, Percentage, total, n) |> 
    mutate(var=factor(var, levels, 
        labels=var_levels)) |> 
    rename("Group N"=total, "N"=n) |> 
    drop_na(var) |> 
    arrange(Year, var, Party) |> 
    rename(!!var_name:=var) 

data_out |> 
    gt() |> 
    fmt_integer(columns=c("N", "Group N")) |> 
    fmt_number(columns=Percentage) |>
    opt_interactive(use_filters=TRUE, use_compact_mode=TRUE)

write_csv(file=here::here("voter_trends", "data", paste0("party_",var_name, ".csv")), data_out)

```

The summary statistics are available [here](data/party_Income.csv). The `Group N` column is the number of respondents in a given group in a given year while the `N` column is the number of respondents who selected the answer in the `Party` column.

Note: These are all _weighted_ statistics (using the `VCF0009z` weights) and are provided if you'd like to make you own visualizations. If you are interested in doing your own analysis, use the raw data available from the [American National Election Studies survey](https://electionstudies.org/). 


:::



## By Race

Note: Options for race have varied significantly overtime, and the size of the ANES means that there are very small samples Asian and American Indian. Because of this they are grouped together into "Other, non-Hispanic" which also includes those who identify as multiple racial categories. I also drop any years where there are fewer than 50 individuals in the sample. This is far from ideal. 

```{r}

levels <- 1:4
variable <- "VCF0105b"
var_levels <- c("White, non-Hispanic", "Black, non-Hispanic", 
        "Hispanic", "Other, non-Hispanic")
var_name <- "Race"
p <- list()

p_data <- anes_df |> 
    filter(VCF0301 %in% c(1:7, 0)) |> 
    rename(var=!!variable) |>
    group_by(VCF0004, VCF0301,var) |>  
    summarize(n=sum(VCF0009z)) |> 
    group_by(VCF0004, var) |>
    mutate(total=sum(n), 
        Percentage=(n/total)*100, 
        Party=factor(VCF0301, c(1:3,4,0,5:7), 
        labels=c("Strong Dem", "Weak Dem", "Lean Dem", "Indep", "Don't Know", "Lean Rep", "Weak Rep", "Strong Rep"))) |>
        rename("Year"="VCF0004") 

for(ii in seq_along(levels)){
    p[[ii]] <- p_data |> 
        filter(total > 50) |> 
        filter(var==ii) |>
        ggplot(aes(x=Year, y=Percentage, 
        fill=Party)) + 
        geom_col() + 
        geom_hline(yintercept=50, linetype="dashed", color="grey70") + 
        geom_hline(yintercept=c(25,75), linetype="dotted",  color="grey70") + 
        scale_fill_manual("Party ID", values=pal) + 
        # scale_y_continuous(labels=scales::label_percent()) +
        labs(y="Percentage", x="") + 
        theme_pubr() + theme(legend.position="bottom")

}

```

::: {.panel-tabset group="race"}

### White, non-Hispanic

::::{.toggle-div .visible}
```{r party-race-white}
p[[1]]
```

::::


::::{.toggle-div }

```{r}

ggplotly(p[[1]]) |> 
    layout(legend = list(
        orientation = "h"
        )
    )

```

::::


### Black, non-Hispanic

::::{.toggle-div .visible}
```{r party-race-black}
p[[2]]
```

::::


::::{.toggle-div }

```{r}

ggplotly(p[[2]]) |> 
    layout(legend = list(
        orientation = "h"
        )
    )

```

::::

### Hispanic

::::{.toggle-div .visible}
```{r party-race-hispanic}
p[[3]]
```

::::


::::{.toggle-div }

```{r}

ggplotly(p[[3]]) |> 
    layout(legend = list(
        orientation = "h"
        )
    )

```

::::


### Other, non-Hispanic

::::{.toggle-div .visible}
```{r party-race-other}
p[[4]]
```

::::


::::{.toggle-div }

```{r}

ggplotly(p[[4]]) |> 
    layout(legend = list(
        orientation = "h"
        )
    )

```

::::

### Distribution

```{r}

p <- p_data |> filter(VCF0301==1) |> 
    group_by(Year) |> 
    mutate(Percentage= total/sum(total)*100, 
        !!var_name:=factor(var, labels=var_levels, levels=levels)) |> 
    ggplot(aes(x=Year, y=Percentage, 
        fill=!!sym(var_name))) + 
        geom_col(color="gray", linewidth=.5) + 
        geom_hline(yintercept=50, linetype="dashed", color="grey70") + 
        geom_hline(yintercept=c(25,75), linetype="dotted",  color="grey70") + 
        scale_fill_viridis_d(option="H", begin=.05, end=.95) + 
        # scale_y_continuous(labels=scales::label_percent()) +
        labs(y="Percentage", x="") + 
        theme_pubr() + theme(legend.position="bottom")
```


::::{.toggle-div .visible}
```{r party-race-dist}
p + guides(fill=guide_legend(nrow=2))
```

::::


::::{.toggle-div }

```{r}

ggplotly(p) |> 
    layout(legend = list(
        orientation = "h"
        )
    )

```

::::


### Data

```{r}


data_out <- p_data |> ungroup() |>
    select(Year, var, Party, Percentage, total, n) |> 
    mutate(var=factor(var, levels, 
        labels=var_levels)) |> 
    rename("Group N"=total, "N"=n) |> 
    drop_na(var) |> 
    arrange(Year, var, Party) |> 
    rename(!!var_name:=var) 

data_out |> 
    gt() |> 
    fmt_integer(columns=c("N", "Group N")) |> 
    fmt_number(columns=Percentage) |>
    opt_interactive(use_filters=TRUE, use_compact_mode=TRUE)

write_csv(file=here::here("voter_trends", "data", paste0("party_",var_name, ".csv")), data_out)

```

The summary statistics are available [here](data/party_Race.csv). The `Group N` column is the number of respondents in a given group in a given year while the `N` column is the number of respondents who selected the answer in the `Party` column.

Note: These are all _weighted_ statistics (using the `VCF0009z` weights) and are provided if you'd like to make you own visualizations. If you are interested in doing your own analysis, use the raw data available from the [American National Election Studies survey](https://electionstudies.org/). 


:::



## By Subjective Class

Subjective class is what an individual _identifies_ as when asked. The question used by ANES is:

>There’s been some talk these days about different social classes.
Most people say they belong either to the middle class or the working
class. Do you ever think of yourself as belonging in one of these classes?
Which one?  

In some years respondents were asked where they identified within "working" or "middle" but not consistently so that has been dropped from this analysis. 

```{r}


levels <- 1:2
variable <- "VCF0148a"
var_levels <- c("Working Class", "Middle Class")
var_name <- "Class"
p <- list()

p_data <- anes_df |> 
    mutate(VCF0148a = 
        case_match(VCF0148a, 
            1:3 ~ 1, 
            4:6 ~ 2, 
            .default=NA)) |> 
    filter(VCF0301 %in% c(1:7, 0)) |> 
    rename(var=!!variable) |>
    group_by(VCF0004, VCF0301,var) |>  
    summarize(n=sum(VCF0009z)) |> 
    group_by(VCF0004, var) |>
    mutate(total=sum(n), 
        Percentage=(n/total)*100, 
        Party=factor(VCF0301, c(1:3,4,0,5:7), 
        labels=c("Strong Dem", "Weak Dem", "Lean Dem", "Indep", "Don't Know", "Lean Rep", "Weak Rep", "Strong Rep"))) |>
        rename("Year"="VCF0004")

for(ii in seq_along(levels)){
    p[[ii]] <- p_data |> 
        filter(total > 50) |>
        filter(var==ii) |>
        ggplot(aes(x=Year, y=Percentage, 
        fill=Party)) + 
        geom_col() + 
        geom_hline(yintercept=50, linetype="dashed", color="grey70") + 
        geom_hline(yintercept=c(25,75), linetype="dotted",  color="grey70") + 
        scale_fill_manual("Party ID", values=pal) + 
        # scale_y_continuous(labels=scales::label_percent()) +
        labs(y="Percentage", x="") + 
        theme_pubr() + theme(legend.position="bottom")

}

```

::: {.panel-tabset group="class"}

### Working Class
::::{.toggle-div .visible}
```{r party-class-working}
p[[1]]
```

::::


::::{.toggle-div }

```{r}

ggplotly(p[[1]]) |> 
    layout(legend = list(
        orientation = "h"
        )
    )

```

::::


### Middle Class
::::{.toggle-div .visible}
```{r party-class-middle}
p[[2]]
```

::::


::::{.toggle-div }

```{r}

ggplotly(p[[2]]) |> 
    layout(legend = list(
        orientation = "h"
        )
    )

```

::::

### Distribution

```{r}

p <- p_data |> filter(VCF0301==1) |> 
    group_by(Year) |> 
    mutate(Percentage= total/sum(total)*100, 
        !!var_name:=factor(var, labels=var_levels, levels=levels)) |> 
    ggplot(aes(x=Year, y=Percentage, 
        fill=!!sym(var_name))) + 
        geom_col(color="gray", linewidth=.5) + 
        geom_hline(yintercept=50, linetype="dashed", color="grey70") + 
        geom_hline(yintercept=c(25,75), linetype="dotted",  color="grey70") + 
        scale_fill_viridis_d(option="H", begin=.05, end=.95) + 
        # scale_y_continuous(labels=scales::label_percent()) +
        labs(y="Percentage", x="") + 
        theme_pubr() + theme(legend.position="bottom")
```


::::{.toggle-div .visible}
```{r party-class-dist}
p + guides(fill=guide_legend(nrow=2))
```

::::


::::{.toggle-div }

```{r}

ggplotly(p) |> 
    layout(legend = list(
        orientation = "h"
        )
    )

```

::::


### Data

```{r}


data_out <- p_data |> ungroup() |>
    select(Year, var, Party, Percentage, total, n) |> 
    mutate(var=factor(var, levels, 
        labels=var_levels)) |> 
    rename("Group N"=total, "N"=n) |> 
    drop_na(var) |> 
    arrange(Year, var, Party) |> 
    rename(!!var_name:=var) 

data_out |> 
    gt() |> 
    fmt_integer(columns=c("N", "Group N")) |> 
    fmt_number(columns=Percentage) |>
    opt_interactive(use_filters=TRUE, use_compact_mode=TRUE)

write_csv(file=here::here("voter_trends", "data", paste0("party_",var_name, ".csv")), data_out)

```

The summary statistics are available [here](data/party_Class.csv). The `Group N` column is the number of respondents in a given group in a given year while the `N` column is the number of respondents who selected the answer in the `Party` column.

Note: These are all _weighted_ statistics (using the `VCF0009z` weights) and are provided if you'd like to make you own visualizations. If you are interested in doing your own analysis, use the raw data available from the [American National Election Studies survey](https://electionstudies.org/). 

:::





## By Union Status




```{r}


levels <- 1:2
variable <- "VCF0127"
var_levels <- c("Union Household", "Non-Union")
var_name <- "Class"
p <- list()

p_data <- anes_df |> 
    filter(VCF0301 %in% c(1:7, 0)) |> 
    rename(var=!!variable) |>
    group_by(VCF0004, VCF0301,var) |>  
    summarize(n=sum(VCF0009z)) |> 
    group_by(VCF0004, var) |>
    mutate(total=sum(n), 
        Percentage=(n/total)*100, 
        Party=factor(VCF0301, c(1:3,4,0,5:7), 
        labels=c("Strong Dem", "Weak Dem", "Lean Dem", "Indep", "Don't Know", "Lean Rep", "Weak Rep", "Strong Rep"))) |>
        rename("Year"="VCF0004")

for(ii in seq_along(levels)){
    p[[ii]] <- p_data |> 
        filter(total > 50) |>
        filter(var==ii) |>
        ggplot(aes(x=Year, y=Percentage, 
        fill=Party)) + 
        geom_col() + 
        geom_hline(yintercept=50, linetype="dashed", color="grey70") + 
        geom_hline(yintercept=c(25,75), linetype="dotted",  color="grey70") + 
        scale_fill_manual("Party ID", values=pal) + 
        # scale_y_continuous(labels=scales::label_percent()) +
        labs(y="Percentage", x="") + 
        theme_pubr() + theme(legend.position="bottom")

}

```

::: {.panel-tabset group="union"}

### Union Household

::::{.toggle-div .visible}
```{r party-union-yes}
p[[1]]
```

::::


::::{.toggle-div }

```{r}

ggplotly(p[[1]]) |> 
    layout(legend = list(
        orientation = "h"
        )
    )

```

::::


### Non-Union
::::{.toggle-div .visible}
```{r party-union-no}
p[[2]]
```

::::


::::{.toggle-div }

```{r}

ggplotly(p[[2]]) |> 
    layout(legend = list(
        orientation = "h"
        )
    )

```

::::



### Distribution

```{r}

p <- p_data |> filter(VCF0301==1) |> 
    group_by(Year) |> 
    mutate(Percentage= total/sum(total)*100, 
        !!var_name:=factor(var, labels=var_levels, levels=levels)) |> 
    ggplot(aes(x=Year, y=Percentage, 
        fill=!!sym(var_name))) + 
        geom_col(color="gray", linewidth=.5) + 
        geom_hline(yintercept=50, linetype="dashed", color="grey70") + 
        geom_hline(yintercept=c(25,75), linetype="dotted",  color="grey70") + 
        scale_fill_viridis_d(option="H", begin=.05, end=.95) + 
        # scale_y_continuous(labels=scales::label_percent()) +
        labs(y="Percentage", x="") + 
        theme_pubr() + theme(legend.position="bottom")
```


::::{.toggle-div .visible}
```{r party-unions-dist}
p + guides(fill=guide_legend(nrow=2))
```

::::


::::{.toggle-div }

```{r}

ggplotly(p) |> 
    layout(legend = list(
        orientation = "h"
        )
    )

```

::::


### Data

```{r}


data_out <- p_data |> ungroup() |>
    select(Year, var, Party, Percentage, total, n) |> 
    mutate(var=factor(var, levels, 
        labels=var_levels)) |> 
    rename("Group N"=total, "N"=n) |> 
    drop_na(var) |> 
    arrange(Year, var, Party) |> 
    rename(!!var_name:=var) 

data_out |> 
    gt() |> 
    fmt_integer(columns=c("N", "Group N")) |> 
    fmt_number(columns=Percentage) |>
    opt_interactive(use_filters=TRUE, use_compact_mode=TRUE)

write_csv(file=here::here("voter_trends", "data", paste0("party_",var_name, ".csv")), data_out)

```

The summary statistics are available [here](data/party_Union.csv). The `Group N` column is the number of respondents in a given group in a given year while the `N` column is the number of respondents who selected the answer in the `Party` column.

Note: These are all _weighted_ statistics (using the `VCF0009z` weights) and are provided if you'd like to make you own visualizations. If you are interested in doing your own analysis, use the raw data available from the [American National Election Studies survey](https://electionstudies.org/). 

:::


## Data Notes

All data presented here is from the [American National Election Studies survey](https://electionstudies.org/) using the `VCF0009z` weights. 
